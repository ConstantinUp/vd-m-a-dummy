{"ast":null,"code":"import _classCallCheck from \"/home/constantin/workspace/vd-m-a-dummy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/constantin/workspace/vd-m-a-dummy/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component, Input } from '@angular/core';\nimport { Node } from \"../vdma_classes/Node\";\nimport { Action } from \"../vdma_classes/Action\";\nimport { MatDialog, MatDialogConfig } from \"@angular/material\";\nimport { ActionFormComponent } from \"../action-form/action-form.component\";\n\nvar NodeFormComponent = /*#__PURE__*/function () {\n  function NodeFormComponent(actionDialog) {\n    _classCallCheck(this, NodeFormComponent);\n\n    this.actionDialog = actionDialog;\n    this.globalActionList = [];\n  }\n\n  _createClass(NodeFormComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {}\n  }, {\n    key: \"addNewAction\",\n    value: function addNewAction() {\n      var _this = this;\n\n      var action = new Action();\n      action.actionID = \"0\";\n      action.actionName = \"newAction\";\n      action.actionDescription = \"Neue Aktion\";\n      var dialogConfig = new MatDialogConfig();\n      dialogConfig.width = \"400px\";\n      dialogConfig.data = action;\n      var actionDialogRef = this.actionDialog.open(ActionFormComponent, dialogConfig);\n      actionDialogRef.afterClosed().subscribe(function (action) {\n        if (action) {\n          _this.node.actions.push(action);\n        }\n      });\n    }\n  }, {\n    key: \"editAction\",\n    value: function editAction(action) {\n      var actionCopy = JSON.parse(JSON.stringify(action));\n      var dialogConfig = new MatDialogConfig();\n      dialogConfig.width = \"400px\";\n      dialogConfig.data = actionCopy;\n      var actionDialogRef = this.actionDialog.open(ActionFormComponent, dialogConfig);\n      actionDialogRef.afterClosed().subscribe(function (returnedAction) {\n        if (returnedAction) {\n          Object.assign(action, returnedAction);\n        }\n      });\n    }\n  }, {\n    key: \"deleteAction\",\n    value: function deleteAction(actionToDelete) {\n      var indexToDelete = this.node.actions.findIndex(function (actionToTest) {\n        return actionToTest === actionToDelete;\n      });\n      this.node.actions.splice(indexToDelete, 1);\n    }\n  }, {\n    key: \"rotateArrow\",\n    value: function rotateArrow(thetaValue) {\n      var desiredRotation = -thetaValue * (180.0 / Math.PI);\n      desiredRotation = (desiredRotation + 360) % 360;\n      return 'rotate(' + desiredRotation + 'deg)';\n    }\n  }]);\n\n  return NodeFormComponent;\n}();\n\n__decorate([Input(), __metadata(\"design:type\", Node)], NodeFormComponent.prototype, \"node\", void 0);\n\nNodeFormComponent = __decorate([Component({\n  selector: 'app-node-form',\n  templateUrl: './node-form.component.html',\n  styleUrls: ['./node-form.component.css']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object])], NodeFormComponent);\nexport { NodeFormComponent };","map":null,"metadata":{},"sourceType":"module"}